{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"C:\\\\Users\\\\olenaageyeva\\\\Desktop\\\\Training Projects\\\\conference\\\\src\\\\SignMeUp.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { ConfigContext } from \"./App\";\n\nconst SignMeUp = ({\n  signupCallback\n}) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n  const [email, setEmail] = useState();\n  const [emailValid, setEmailValid] = useState(false);\n  const [sendProcessing, setSendProcessing] = useState(false);\n  const context = useContext(ConfigContext);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  };\n\n  function sendEmailToBackend() {\n    setSendProcessing(true);\n    new _Promise(function (resolve) {\n      setTimeout(function () {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    }).then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    });\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\"; //console.log(\"src/SignMeUp called\");\n\n  return context.showSignMeUp === false ? null : React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: email,\n    onChange: e => {\n      setEmailValid(validateEmail(e.target.value));\n      return setEmail(e.target.value);\n    },\n    placeholder: \"Enter Email\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), \"\\xA0\", React.createElement(\"button\", {\n    disabled: !emailValid || sendProcessing,\n    className: \"btn\",\n    onClick: sendEmailToBackend,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, buttonText))));\n};\n\nexport default SignMeUp;","map":{"version":3,"sources":["C:\\Users\\olenaageyeva\\Desktop\\Training Projects\\conference\\src\\SignMeUp.js"],"names":["React","useState","useEffect","useContext","ToastContainer","toast","ConfigContext","SignMeUp","signupCallback","console","log","email","setEmail","emailValid","setEmailValid","sendProcessing","setSendProcessing","context","validateEmail","re","test","notify","info","sendEmailToBackend","resolve","setTimeout","then","buttonText","showSignMeUp","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,uCAAP;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AACrCN,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb;AACH,GAFQ,CAAT;AAIA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAMgB,OAAO,GAAGd,UAAU,CAACG,aAAD,CAA1B;;AAEA,WAASY,aAAT,CAAuBP,KAAvB,EAA8B;AAC1B,UAAMQ,EAAE,GAAG,2JAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQT,KAAR,CAAP;AACH;;AAED,QAAMU,MAAM,GAAG,MAAM;AACjBhB,IAAAA,KAAK,CAACiB,IAAN,CAAY,2CAA0CX,KAAM,EAA5D;AACH,GAFD;;AAIA,WAASY,kBAAT,GAA8B;AAC1BP,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA,iBAAY,UAAUQ,OAAV,EAAmB;AAC3BC,MAAAA,UAAU,CAAC,YAAY;AACnBT,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAY,QAAAA,OAAO;AACV,OAJS,EAIP,IAJO,CAAV;AAKH,KAND,EAMGE,IANH,CAMQ,MAAM;AACVL,MAAAA,MAAM;AACNb,MAAAA,cAAc,CAACG,KAAD,CAAd;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAVD;AAWH;;AAED,QAAMe,UAAU,GAAGZ,cAAc,GAAG,eAAH,GAAqB,aAAtD,CAnCqC,CAqCrC;;AAEA,SAAOE,OAAO,CAACW,YAAR,KAAyB,KAAzB,GAAiC,IAAjC,GACH;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAEjB,KADX;AAEI,IAAA,QAAQ,EAAEkB,CAAC,IAAI;AACXf,MAAAA,aAAa,CAACI,aAAa,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,CAAb;AACA,aAAOnB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACH,KALL;AAMI,IAAA,WAAW,EAAC,aANhB;AAOI,IAAA,IAAI,EAAC,OAPT;AAQI,IAAA,IAAI,EAAC,OART;AASI,IAAA,QAAQ,MATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,UAaN;AACc,IAAA,QAAQ,EAAE,CAAClB,UAAD,IAAeE,cADvC;AAEc,IAAA,SAAS,EAAC,KAFxB;AAGc,IAAA,OAAO,EAAEQ,kBAHvB;AAIc,IAAA,IAAI,EAAC,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMeI,UANf,CAbM,CAFJ,CADJ,CADJ;AA6BH,CApED;;AAsEA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { ConfigContext } from \"./App\";\r\n\r\n\r\nconst SignMeUp = ({ signupCallback }) => {\r\n    useEffect(() => {\r\n        console.log(`SignMeUp:useEffect called`);\r\n    });\r\n\r\n    const [email, setEmail] = useState();\r\n    const [emailValid, setEmailValid] = useState(false);\r\n    const [sendProcessing, setSendProcessing] = useState(false);\r\n\r\n    const context = useContext(ConfigContext);\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(email);\r\n    }\r\n\r\n    const notify = () => {\r\n        toast.info(`You will be notified of upcoming events ${email}`);\r\n    };\r\n\r\n    function sendEmailToBackend() {\r\n        setSendProcessing(true);\r\n        new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                setSendProcessing(false);\r\n                setEmail(\"\");\r\n                resolve();\r\n            }, 1000);\r\n        }).then(() => {\r\n            notify();\r\n            signupCallback(email);\r\n            setEmail(\"\");\r\n        });\r\n    }\r\n\r\n    const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\";\r\n\r\n    //console.log(\"src/SignMeUp called\");\r\n\r\n    return context.showSignMeUp === false ? null : (\r\n        <div className=\"container\">\r\n            <div>\r\n                <ToastContainer />\r\n                <div className=\"content\">\r\n                    <input\r\n                        value={email}\r\n                        onChange={e => {\r\n                            setEmailValid(validateEmail(e.target.value));\r\n                            return setEmail(e.target.value);\r\n                        }}\r\n                        placeholder=\"Enter Email\"\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        required\r\n                    />\r\n                    &nbsp;\r\n          <button\r\n                        disabled={!emailValid || sendProcessing}\r\n                        className=\"btn\"\r\n                        onClick={sendEmailToBackend}\r\n                        type=\"submit\"\r\n                    >\r\n                        {buttonText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignMeUp;"]},"metadata":{},"sourceType":"module"}