{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"C:\\\\Users\\\\olenaageyeva\\\\Desktop\\\\Training Projects\\\\conference\\\\src\\\\Speakers.js\";\nimport React, { useState, useEffect, useContext, useReducer, useCallback, use } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from \"./Header\";\nimport { Menu } from \"./Menu\";\nimport SpeakerData from \"./SpeakerData\";\nimport SpeakerDetail from \"./SpeakerDetail\";\nimport { ConfigContext } from \"./App\";\nimport speakersReducer from './speakerReducer';\n\nconst Speakers = ({}) => {\n  const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  const [speakingSunday, setSpeakingSunday] = useState(true); // CODE ONLY LEFT HERE COMMENTED OUT FOR TEACH PURPOSES.\n  // BEST PRACTICE WOULD BE TO REMOVE COMMENTED CODE OUT AS IT\n  //   WOULD BE IN SOURCE CONTROL AND NOT NECESSARY.\n  //const [speakerList, setSpeakerList] = useState([]);\n\n  const [speakerList, dispatch] = useReducer(speakersReducer, []);\n  const [isLoading, setIsLoading] = useState(true);\n  const context = useContext(ConfigContext);\n  useEffect(() => {\n    setIsLoading(true);\n    new _Promise(function (resolve) {\n      setTimeout(function () {\n        resolve();\n      }, 1000);\n    }).then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({\n        sat,\n        sun\n      }) => {\n        return speakingSaturday && sat || speakingSunday && sun;\n      }); //setSpeakerList(speakerListServerFilter);\n\n      dispatch({\n        type: \"setSpeakerList\",\n        data: speakerListServerFilter\n      });\n    });\n    return () => {\n      console.log(\"cleanup\");\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  };\n\n  const newSpeakerList = useMemo(() => speakerList.filter(({\n    sat,\n    sun\n  }) => speakingSaturday && sat || speakingSunday && sun).sort(function (a, b) {\n    if (a.firstName < b.firstName) {\n      return -1;\n    }\n\n    if (a.firstName > b.firstName) {\n      return 1;\n    }\n\n    return 0;\n  }), [speakingSaturday, speakingSunday, speakerList]);\n  const speakerListFiltered = isLoading ? [] : newSpeakerList;\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  };\n\n  const heartFavoriteHandler = useCallback((e, favoriteValue) => {\n    e.preventDefault();\n\n    const sessionId = _parseInt(e.target.attributes[\"data-sessionid\"].value);\n\n    dispatch({\n      type: favoriteValue === true ? \"favorite\" : \"unfavorite\",\n      sessionId\n    }); // PLURALSIGHT COURSE NOTE: setSpeakerList IS BROKEN ON PURPOSE.  THIS IS FIXED IN NEXT CLIP\n    // setSpeakerList(speakerList.map(item => {\n    //     if (item.id === sessionId) {\n    //         item.favorite = favoriteValue;\n    //         return item;\n    //     }\n    //     return item;\n    // }));\n  }, []);\n  if (isLoading) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Loading...\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"btn-toolbar  margintopbottom5 checkbox-bigger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, context.showSpeakerSpeakingDays === false ? null : React.createElement(\"div\", {\n    className: \"hide\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSaturday,\n    checked: speakingSaturday,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), \"Saturday Speakers\")), React.createElement(\"div\", {\n    className: \"form-check-inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    onChange: handleChangeSunday,\n    checked: speakingSunday,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), \"Sunday Speakers\")))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-deck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, speakerListFiltered.map(({\n    id,\n    firstName,\n    lastName,\n    bio,\n    favorite\n  }) => {\n    return React.createElement(SpeakerDetail, {\n      key: id,\n      id: id,\n      favorite: favorite,\n      onHeartFavoriteHandler: heartFavoriteHandler,\n      firstName: firstName,\n      lastName: lastName,\n      bio: bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    });\n  })))));\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:\\Users\\olenaageyeva\\Desktop\\Training Projects\\conference\\src\\Speakers.js"],"names":["React","useState","useEffect","useContext","useReducer","useCallback","use","Header","Menu","SpeakerData","SpeakerDetail","ConfigContext","speakersReducer","Speakers","speakingSaturday","setSpeakingSaturday","speakingSunday","setSpeakingSunday","speakerList","dispatch","isLoading","setIsLoading","context","resolve","setTimeout","then","speakerListServerFilter","filter","sat","sun","type","data","console","log","handleChangeSaturday","newSpeakerList","useMemo","sort","a","b","firstName","speakerListFiltered","handleChangeSunday","heartFavoriteHandler","e","favoriteValue","preventDefault","sessionId","target","attributes","value","showSpeakerSpeakingDays","map","id","lastName","bio","favorite"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useReducer, useCallback, use } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../static/site.css\";\r\nimport { Header } from \"./Header\";\r\nimport { Menu } from \"./Menu\";\r\nimport SpeakerData from \"./SpeakerData\";\r\nimport SpeakerDetail from \"./SpeakerDetail\";\r\nimport { ConfigContext } from \"./App\";\r\nimport speakersReducer from './speakerReducer'\r\n\r\nconst Speakers = ({ }) => {\r\n    const [speakingSaturday, setSpeakingSaturday] = useState(true);\r\n    const [speakingSunday, setSpeakingSunday] = useState(true);\r\n\r\n    // CODE ONLY LEFT HERE COMMENTED OUT FOR TEACH PURPOSES.\r\n    // BEST PRACTICE WOULD BE TO REMOVE COMMENTED CODE OUT AS IT\r\n    //   WOULD BE IN SOURCE CONTROL AND NOT NECESSARY.\r\n\r\n    //const [speakerList, setSpeakerList] = useState([]);\r\n\r\n\r\n    const [speakerList, dispatch] = useReducer(speakersReducer, []);\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const context = useContext(ConfigContext);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        new Promise(function (resolve) {\r\n            setTimeout(function () {\r\n                resolve();\r\n            }, 1000);\r\n        }).then(() => {\r\n            setIsLoading(false);\r\n            const speakerListServerFilter = SpeakerData.filter(({ sat, sun }) => {\r\n                return (speakingSaturday && sat) || (speakingSunday && sun);\r\n            });\r\n            //setSpeakerList(speakerListServerFilter);\r\n            dispatch({\r\n                type: \"setSpeakerList\",\r\n                data: speakerListServerFilter\r\n            });\r\n        });\r\n        return () => {\r\n            console.log(\"cleanup\");\r\n        };\r\n    }, []); // [speakingSunday, speakingSaturday]);\r\n\r\n    const handleChangeSaturday = () => {\r\n        setSpeakingSaturday(!speakingSaturday);\r\n    };\r\n\r\n    const newSpeakerList=useMemo(()=>speakerList\r\n    .filter(\r\n        ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\r\n    )\r\n    .sort(function (a, b) {\r\n        if (a.firstName < b.firstName) {\r\n            return -1;\r\n        }\r\n        if (a.firstName > b.firstName) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }), [speakingSaturday, speakingSunday, speakerList]);\r\n\r\n\r\n    const speakerListFiltered = isLoading\r\n        ? []\r\n        : newSpeakerList;\r\n\r\n    const handleChangeSunday = () => {\r\n        setSpeakingSunday(!speakingSunday);\r\n    };\r\n\r\n    const heartFavoriteHandler = useCallback((e, favoriteValue) => {\r\n        e.preventDefault();\r\n        const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\r\n        dispatch({\r\n            type: favoriteValue === true ? \"favorite\" : \"unfavorite\",\r\n            sessionId\r\n        })\r\n\r\n        // PLURALSIGHT COURSE NOTE: setSpeakerList IS BROKEN ON PURPOSE.  THIS IS FIXED IN NEXT CLIP\r\n        // setSpeakerList(speakerList.map(item => {\r\n        //     if (item.id === sessionId) {\r\n        //         item.favorite = favoriteValue;\r\n        //         return item;\r\n        //     }\r\n        //     return item;\r\n        // }));\r\n    }, []);\r\n\r\n    if (isLoading) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Menu />\r\n            <div className=\"container\">\r\n                <div className=\"btn-toolbar  margintopbottom5 checkbox-bigger\">\r\n                    {context.showSpeakerSpeakingDays === false ? null : (\r\n                        <div className=\"hide\">\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        onChange={handleChangeSaturday}\r\n                                        checked={speakingSaturday}\r\n                                    />\r\n                                    Saturday Speakers\r\n              </label>\r\n                            </div>\r\n                            <div className=\"form-check-inline\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        onChange={handleChangeSunday}\r\n                                        checked={speakingSunday}\r\n                                    />\r\n                                    Sunday Speakers\r\n              </label>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"card-deck\">\r\n                        {speakerListFiltered.map(\r\n                            ({ id, firstName, lastName, bio, favorite }) => {\r\n                                return (\r\n                                    <SpeakerDetail\r\n                                        key={id}\r\n                                        id={id}\r\n                                        favorite={favorite}\r\n                                        onHeartFavoriteHandler={heartFavoriteHandler}\r\n                                        firstName={firstName}\r\n                                        lastName={lastName}\r\n                                        bio={bio}\r\n                                    />\r\n                                );\r\n                            }\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}